vendor_name = ModelSim
source_file = 1, C:/Users/May Trinh/Desktop/Logic Design/Project 2/Project 1/main.vhd
source_file = 1, C:/Users/May Trinh/Desktop/Logic Design/Project 2/Project 1/Waveform.vwf
source_file = 1, C:/Users/May Trinh/Desktop/Logic Design/Project 2/Project 1/Waveform1.vwf
source_file = 1, C:/Users/May Trinh/Desktop/Logic Design/Project 2/Project 1/Waveform2.vwf
source_file = 1, C:/Users/May Trinh/Desktop/Logic Design/Project 2/Project 1/Waveform3.vwf
source_file = 1, C:/Users/May Trinh/Desktop/Logic Design/Project 2/Project 1/Waveform4.vwf
source_file = 1, Waveform5.vwf
source_file = 1, Waveform6.vwf
source_file = 1, Waveform7.vwf
source_file = 1, Waveform8.vwf
source_file = 1, Waveform9.vwf
source_file = 1, Waveform10.vwf
source_file = 1, Waveform11.vwf
source_file = 1, Waveform12.vwf
source_file = 1, Waveform13.vwf
source_file = 1, Waveform14.vwf
source_file = 1, C:/Users/May Trinh/Desktop/Logic Design/Project 2/Project 1/db/main.cbx.xml
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.0sp1/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = main
instance = comp, \regE|setA , regE|setA, main, 1
instance = comp, \regE|setB , regE|setB, main, 1
instance = comp, \multiplexor|currAns[5]~19 , multiplexor|currAns[5]~19, main, 1
instance = comp, \multiplexor|currAns[6]~23 , multiplexor|currAns[6]~23, main, 1
instance = comp, \andRegister|rd[6] , andRegister|rd[6], main, 1
instance = comp, \multiplexor|currAns[6]~24 , multiplexor|currAns[6]~24, main, 1
instance = comp, \addConst|add6|sum , addConst|add6|sum, main, 1
instance = comp, \multiplexor|currAns[0]~36 , multiplexor|currAns[0]~36, main, 1
instance = comp, \multiplexor|currAns[6]~37 , multiplexor|currAns[6]~37, main, 1
instance = comp, \wReg3|y[0]~1 , wReg3|y[0]~1, main, 1
instance = comp, \multiplexor|currAns[6]~38 , multiplexor|currAns[6]~38, main, 1
instance = comp, \multiplexor|currAns[6]~39 , multiplexor|currAns[6]~39, main, 1
instance = comp, \multiplexor|currAns[0]~40 , multiplexor|currAns[0]~40, main, 1
instance = comp, \multiplexor|currAns[6]~41 , multiplexor|currAns[6]~41, main, 1
instance = comp, \multiplexor|currAns[0]~42 , multiplexor|currAns[0]~42, main, 1
instance = comp, \multiplexor|currAns[0]~43 , multiplexor|currAns[0]~43, main, 1
instance = comp, \xorReg|rd[2] , xorReg|rd[2], main, 1
instance = comp, \multiplexor|currAns[2]~51 , multiplexor|currAns[2]~51, main, 1
instance = comp, \andRegister|rd[2] , andRegister|rd[2], main, 1
instance = comp, \multiplexor|currAns[2]~52 , multiplexor|currAns[2]~52, main, 1
instance = comp, \multiplexor|currAns[2]~53 , multiplexor|currAns[2]~53, main, 1
instance = comp, \subConst|add3|sum , subConst|add3|sum, main, 1
instance = comp, \xorReg|rd[3] , xorReg|rd[3], main, 1
instance = comp, \multiplexor|currAns[3]~59 , multiplexor|currAns[3]~59, main, 1
instance = comp, \D|instrC[2]~3 , D|instrC[2]~3, main, 1
instance = comp, \D|Equal9~0 , D|Equal9~0, main, 1
instance = comp, \D|instrC[3]~5 , D|instrC[3]~5, main, 1
instance = comp, \D|comb~3 , D|comb~3, main, 1
instance = comp, \multiplexor|currAns[6]~63 , multiplexor|currAns[6]~63, main, 1
instance = comp, \multiplexor|currAns[2]~64 , multiplexor|currAns[2]~64, main, 1
instance = comp, \multiplexor|currAns[2]~65 , multiplexor|currAns[2]~65, main, 1
instance = comp, \const|new_val[1] , const|new_val[1], main, 1
instance = comp, \instruction[14]~input , instruction[14]~input, main, 1
instance = comp, \upd~input , upd~input, main, 1
instance = comp, \exe~input , exe~input, main, 1
instance = comp, \instruction[5]~input , instruction[5]~input, main, 1
instance = comp, \exe~inputclkctrl , exe~inputclkctrl, main, 1
instance = comp, \regE|setB~clkctrl , regE|setB~clkctrl, main, 1
instance = comp, \regE|setA~clkctrl , regE|setA~clkctrl, main, 1
instance = comp, \out1[0]~output , out1[0]~output, main, 1
instance = comp, \out1[1]~output , out1[1]~output, main, 1
instance = comp, \out1[2]~output , out1[2]~output, main, 1
instance = comp, \out1[3]~output , out1[3]~output, main, 1
instance = comp, \out1[4]~output , out1[4]~output, main, 1
instance = comp, \out1[5]~output , out1[5]~output, main, 1
instance = comp, \out1[6]~output , out1[6]~output, main, 1
instance = comp, \out2[0]~output , out2[0]~output, main, 1
instance = comp, \out2[1]~output , out2[1]~output, main, 1
instance = comp, \out2[2]~output , out2[2]~output, main, 1
instance = comp, \out2[3]~output , out2[3]~output, main, 1
instance = comp, \out2[4]~output , out2[4]~output, main, 1
instance = comp, \out2[5]~output , out2[5]~output, main, 1
instance = comp, \out2[6]~output , out2[6]~output, main, 1
instance = comp, \instruction[2]~input , instruction[2]~input, main, 1
instance = comp, \instruction[1]~input , instruction[1]~input, main, 1
instance = comp, \instruction[9]~input , instruction[9]~input, main, 1
instance = comp, \D|Equal1~0 , D|Equal1~0, main, 1
instance = comp, \instruction[15]~input , instruction[15]~input, main, 1
instance = comp, \D|Equal2~1 , D|Equal2~1, main, 1
instance = comp, \instruction[10]~input , instruction[10]~input, main, 1
instance = comp, \D|Equal10~0 , D|Equal10~0, main, 1
instance = comp, \D|comb~1 , D|comb~1, main, 1
instance = comp, \D|comb~0 , D|comb~0, main, 1
instance = comp, \D|instrC[3] , D|instrC[3], main, 1
instance = comp, \instruction[12]~input , instruction[12]~input, main, 1
instance = comp, \instruction[8]~input , instruction[8]~input, main, 1
instance = comp, \D|Equal4~0 , D|Equal4~0, main, 1
instance = comp, \instruction[13]~input , instruction[13]~input, main, 1
instance = comp, \D|Equal9~1 , D|Equal9~1, main, 1
instance = comp, \D|instrC[2]~7 , D|instrC[2]~7, main, 1
instance = comp, \instruction[6]~input , instruction[6]~input, main, 1
instance = comp, \instruction[11]~input , instruction[11]~input, main, 1
instance = comp, \D|Equal4~1 , D|Equal4~1, main, 1
instance = comp, \D|Equal6~0 , D|Equal6~0, main, 1
instance = comp, \D|Equal2~0 , D|Equal2~0, main, 1
instance = comp, \D|Equal2~2 , D|Equal2~2, main, 1
instance = comp, \D|instrC[1]~8 , D|instrC[1]~8, main, 1
instance = comp, \D|instrC[3]~10 , D|instrC[3]~10, main, 1
instance = comp, \D|comb~4 , D|comb~4, main, 1
instance = comp, \D|comb~5 , D|comb~5, main, 1
instance = comp, \D|instrC[1] , D|instrC[1], main, 1
instance = comp, \multiplexor|currAns[5]~16 , multiplexor|currAns[5]~16, main, 1
instance = comp, \multiplexor|currAns[5]~16clkctrl , multiplexor|currAns[5]~16clkctrl, main, 1
instance = comp, \D|instrC[3]~4 , D|instrC[3]~4, main, 1
instance = comp, \D|instrC[3]~6 , D|instrC[3]~6, main, 1
instance = comp, \D|comb~2 , D|comb~2, main, 1
instance = comp, \D|instrC[2] , D|instrC[2], main, 1
instance = comp, \multiplexor|Equal0~0 , multiplexor|Equal0~0, main, 1
instance = comp, \D|Equal8~0 , D|Equal8~0, main, 1
instance = comp, \D|Equal4~2 , D|Equal4~2, main, 1
instance = comp, \D|instrC[2]~2 , D|instrC[2]~2, main, 1
instance = comp, \D|instrC[0]~9 , D|instrC[0]~9, main, 1
instance = comp, \D|comb~7 , D|comb~7, main, 1
instance = comp, \D|comb~6 , D|comb~6, main, 1
instance = comp, \D|instrC[0] , D|instrC[0], main, 1
instance = comp, \multiplexor|currAns[5]~7 , multiplexor|currAns[5]~7, main, 1
instance = comp, \multiplexor|currAns[5]~6 , multiplexor|currAns[5]~6, main, 1
instance = comp, \instruction[4]~input , instruction[4]~input, main, 1
instance = comp, \multiplexor|currAns[5]~11 , multiplexor|currAns[5]~11, main, 1
instance = comp, \D|isConst~0 , D|isConst~0, main, 1
instance = comp, \D|Equal3~0 , D|Equal3~0, main, 1
instance = comp, \D|isConst , D|isConst, main, 1
instance = comp, \D|isConst~clkctrl , D|isConst~clkctrl, main, 1
instance = comp, \const|new_val[0] , const|new_val[0], main, 1
instance = comp, \multiplexor|currAns[0] , multiplexor|currAns[0], main, 1
instance = comp, \temp|rout[0] , temp|rout[0], main, 1
instance = comp, \r1|rout[0] , r1|rout[0], main, 1
instance = comp, \r0|rout[0] , r0|rout[0], main, 1
instance = comp, \wReg2|y[0]~4 , wReg2|y[0]~4, main, 1
instance = comp, \multiplexor|currAns[1]~66 , multiplexor|currAns[1]~66, main, 1
instance = comp, \multiplexor|currAns[5]~8 , multiplexor|currAns[5]~8, main, 1
instance = comp, \multiplexor|currAns[1]~46 , multiplexor|currAns[1]~46, main, 1
instance = comp, \r0|rout[1] , r0|rout[1], main, 1
instance = comp, \wReg1|y[1]~3 , wReg1|y[1]~3, main, 1
instance = comp, \wReg1|y[0]~2 , wReg1|y[0]~2, main, 1
instance = comp, \sub|add1|sum , sub|add1|sum, main, 1
instance = comp, \instruction[0]~input , instruction[0]~input, main, 1
instance = comp, \xorReg|rd[1] , xorReg|rd[1], main, 1
instance = comp, \addReg|add1|sum , addReg|add1|sum, main, 1
instance = comp, \andRegister|rd[1] , andRegister|rd[1], main, 1
instance = comp, \multiplexor|currAns[1]~44 , multiplexor|currAns[1]~44, main, 1
instance = comp, \multiplexor|currAns[1]~45 , multiplexor|currAns[1]~45, main, 1
instance = comp, \multiplexor|currAns[1]~47 , multiplexor|currAns[1]~47, main, 1
instance = comp, \multiplexor|currAns[1]~48 , multiplexor|currAns[1]~48, main, 1
instance = comp, \multiplexor|currAns[1]~67 , multiplexor|currAns[1]~67, main, 1
instance = comp, \multiplexor|currAns[1] , multiplexor|currAns[1], main, 1
instance = comp, \temp|rout[1] , temp|rout[1], main, 1
instance = comp, \r1|rout[1] , r1|rout[1], main, 1
instance = comp, \wReg2|y[1]~3 , wReg2|y[1]~3, main, 1
instance = comp, \addConst|add1|carry_out~0 , addConst|add1|carry_out~0, main, 1
instance = comp, \addConst|add2|sum , addConst|add2|sum, main, 1
instance = comp, \multiplexor|currAns[2]~54 , multiplexor|currAns[2]~54, main, 1
instance = comp, \const|new_val[2] , const|new_val[2], main, 1
instance = comp, \subConst|add1|carry_out~0 , subConst|add1|carry_out~0, main, 1
instance = comp, \multiplexor|currAns[2]~49 , multiplexor|currAns[2]~49, main, 1
instance = comp, \multiplexor|currAns[2]~50 , multiplexor|currAns[2]~50, main, 1
instance = comp, \multiplexor|currAns[2]~55 , multiplexor|currAns[2]~55, main, 1
instance = comp, \multiplexor|currAns[2]~56 , multiplexor|currAns[2]~56, main, 1
instance = comp, \multiplexor|currAns[2] , multiplexor|currAns[2], main, 1
instance = comp, \temp|rout[2] , temp|rout[2], main, 1
instance = comp, \r0|rout[2] , r0|rout[2], main, 1
instance = comp, \r1|rout[2] , r1|rout[2], main, 1
instance = comp, \wReg2|y[2]~2 , wReg2|y[2]~2, main, 1
instance = comp, \addConst|add3|sum , addConst|add3|sum, main, 1
instance = comp, \sub|add1|carry_out~0 , sub|add1|carry_out~0, main, 1
instance = comp, \sub|add2|carry_out~0 , sub|add2|carry_out~0, main, 1
instance = comp, \sub|add3|sum , sub|add3|sum, main, 1
instance = comp, \wReg1|y[2]~1 , wReg1|y[2]~1, main, 1
instance = comp, \addReg|add1|carry_out~0 , addReg|add1|carry_out~0, main, 1
instance = comp, \addReg|add2|carry_out~0 , addReg|add2|carry_out~0, main, 1
instance = comp, \addReg|add3|sum , addReg|add3|sum, main, 1
instance = comp, \instruction[3]~input , instruction[3]~input, main, 1
instance = comp, \r0|rout[3] , r0|rout[3], main, 1
instance = comp, \andRegister|rd[3] , andRegister|rd[3], main, 1
instance = comp, \multiplexor|currAns[3]~57 , multiplexor|currAns[3]~57, main, 1
instance = comp, \multiplexor|currAns[3]~58 , multiplexor|currAns[3]~58, main, 1
instance = comp, \multiplexor|currAns[3]~60 , multiplexor|currAns[3]~60, main, 1
instance = comp, \multiplexor|currAns[3]~61 , multiplexor|currAns[3]~61, main, 1
instance = comp, \multiplexor|currAns[3]~62 , multiplexor|currAns[3]~62, main, 1
instance = comp, \multiplexor|currAns[3] , multiplexor|currAns[3], main, 1
instance = comp, \temp|rout[3] , temp|rout[3], main, 1
instance = comp, \r1|rout[3]~feeder , r1|rout[3]~feeder, main, 1
instance = comp, \r1|rout[3] , r1|rout[3], main, 1
instance = comp, \wReg2|y[3]~1 , wReg2|y[3]~1, main, 1
instance = comp, \r0|rout[4] , r0|rout[4], main, 1
instance = comp, \xorReg|rd[4] , xorReg|rd[4], main, 1
instance = comp, \sub|add4|sum~0 , sub|add4|sum~0, main, 1
instance = comp, \addReg|add4|sum , addReg|add4|sum, main, 1
instance = comp, \andRegister|rd[4] , andRegister|rd[4], main, 1
instance = comp, \multiplexor|currAns[4]~9 , multiplexor|currAns[4]~9, main, 1
instance = comp, \multiplexor|currAns[4]~10 , multiplexor|currAns[4]~10, main, 1
instance = comp, \multiplexor|currAns[4]~12 , multiplexor|currAns[4]~12, main, 1
instance = comp, \wReg1|y[3]~0 , wReg1|y[3]~0, main, 1
instance = comp, \sub|add4|sum , sub|add4|sum, main, 1
instance = comp, \multiplexor|currAns[4]~13 , multiplexor|currAns[4]~13, main, 1
instance = comp, \subConst|add3|carry_out , subConst|add3|carry_out, main, 1
instance = comp, \subConst|add4|sum , subConst|add4|sum, main, 1
instance = comp, \multiplexor|currAns[4]~14 , multiplexor|currAns[4]~14, main, 1
instance = comp, \addConst|add3|carry_out~0 , addConst|add3|carry_out~0, main, 1
instance = comp, \addConst|add4|sum , addConst|add4|sum, main, 1
instance = comp, \multiplexor|currAns[4]~15 , multiplexor|currAns[4]~15, main, 1
instance = comp, \multiplexor|currAns[4] , multiplexor|currAns[4], main, 1
instance = comp, \temp|rout[4] , temp|rout[4], main, 1
instance = comp, \r1|rout[4] , r1|rout[4], main, 1
instance = comp, \wReg2|y[4]~5 , wReg2|y[4]~5, main, 1
instance = comp, \r0|rout[7]~feeder , r0|rout[7]~feeder, main, 1
instance = comp, \r0|rout[7] , r0|rout[7], main, 1
instance = comp, \wReg2|y[7]~7 , wReg2|y[7]~7, main, 1
instance = comp, \subConst|add6|sum , subConst|add6|sum, main, 1
instance = comp, \multiplexor|currAns[6]~22 , multiplexor|currAns[6]~22, main, 1
instance = comp, \r1|rout[5]~feeder , r1|rout[5]~feeder, main, 1
instance = comp, \r1|rout[5] , r1|rout[5], main, 1
instance = comp, \wReg1|y[5]~4 , wReg1|y[5]~4, main, 1
instance = comp, \wReg1|y[4]~5 , wReg1|y[4]~5, main, 1
instance = comp, \sub|add3|carry_out~0 , sub|add3|carry_out~0, main, 1
instance = comp, \sub|add4|carry_out~0 , sub|add4|carry_out~0, main, 1
instance = comp, \sub|add5|carry_out~0 , sub|add5|carry_out~0, main, 1
instance = comp, \r1|rout[6] , r1|rout[6], main, 1
instance = comp, \wReg1|y[6]~6 , wReg1|y[6]~6, main, 1
instance = comp, \sub|add6|sum , sub|add6|sum, main, 1
instance = comp, \xorReg|rd[6] , xorReg|rd[6], main, 1
instance = comp, \addReg|add4|carry_out~0 , addReg|add4|carry_out~0, main, 1
instance = comp, \addReg|add4|carry_out~1 , addReg|add4|carry_out~1, main, 1
instance = comp, \addReg|add4|carry_out~2 , addReg|add4|carry_out~2, main, 1
instance = comp, \addReg|add5|carry_out~0 , addReg|add5|carry_out~0, main, 1
instance = comp, \multiplexor|currAns[6]~25 , multiplexor|currAns[6]~25, main, 1
instance = comp, \multiplexor|currAns[6]~26 , multiplexor|currAns[6]~26, main, 1
instance = comp, \multiplexor|currAns[6]~27 , multiplexor|currAns[6]~27, main, 1
instance = comp, \multiplexor|currAns[6]~28 , multiplexor|currAns[6]~28, main, 1
instance = comp, \multiplexor|currAns[6]~29 , multiplexor|currAns[6]~29, main, 1
instance = comp, \multiplexor|currAns[6]~30 , multiplexor|currAns[6]~30, main, 1
instance = comp, \multiplexor|currAns[6] , multiplexor|currAns[6], main, 1
instance = comp, \temp|rout[6] , temp|rout[6], main, 1
instance = comp, \r0|rout[6] , r0|rout[6], main, 1
instance = comp, \wReg2|y[6]~6 , wReg2|y[6]~6, main, 1
instance = comp, \sub|add5|sum , sub|add5|sum, main, 1
instance = comp, \xorReg|rd[5] , xorReg|rd[5], main, 1
instance = comp, \addReg|add5|sum , addReg|add5|sum, main, 1
instance = comp, \andRegister|rd[5] , andRegister|rd[5], main, 1
instance = comp, \multiplexor|currAns[5]~17 , multiplexor|currAns[5]~17, main, 1
instance = comp, \multiplexor|currAns[5]~18 , multiplexor|currAns[5]~18, main, 1
instance = comp, \multiplexor|currAns[5]~20 , multiplexor|currAns[5]~20, main, 1
instance = comp, \multiplexor|currAns[5]~21 , multiplexor|currAns[5]~21, main, 1
instance = comp, \multiplexor|currAns[5]~72 , multiplexor|currAns[5]~72, main, 1
instance = comp, \multiplexor|currAns[5]~73 , multiplexor|currAns[5]~73, main, 1
instance = comp, \multiplexor|currAns[5] , multiplexor|currAns[5], main, 1
instance = comp, \temp|rout[5] , temp|rout[5], main, 1
instance = comp, \r0|rout[5] , r0|rout[5], main, 1
instance = comp, \wReg2|y[5]~0 , wReg2|y[5]~0, main, 1
instance = comp, \multiplexor|currAns[7]~70 , multiplexor|currAns[7]~70, main, 1
instance = comp, \multiplexor|currAns[7]~71 , multiplexor|currAns[7]~71, main, 1
instance = comp, \multiplexor|currAns[7]~31 , multiplexor|currAns[7]~31, main, 1
instance = comp, \sub|add7|sum~0 , sub|add7|sum~0, main, 1
instance = comp, \sub|add7|sum , sub|add7|sum, main, 1
instance = comp, \wReg3|y[7]~0 , wReg3|y[7]~0, main, 1
instance = comp, \multiplexor|currAns[7]~32 , multiplexor|currAns[7]~32, main, 1
instance = comp, \addReg|add7|sum , addReg|add7|sum, main, 1
instance = comp, \multiplexor|currAns[7]~33 , multiplexor|currAns[7]~33, main, 1
instance = comp, \multiplexor|currAns[7]~34 , multiplexor|currAns[7]~34, main, 1
instance = comp, \instruction[7]~input , instruction[7]~input, main, 1
instance = comp, \multiplexor|currAns[7]~68 , multiplexor|currAns[7]~68, main, 1
instance = comp, \multiplexor|currAns[7]~69 , multiplexor|currAns[7]~69, main, 1
instance = comp, \multiplexor|currAns[7]~35 , multiplexor|currAns[7]~35, main, 1
instance = comp, \multiplexor|currAns[7] , multiplexor|currAns[7], main, 1
instance = comp, \temp|rout[7] , temp|rout[7], main, 1
instance = comp, \r1|rout[7] , r1|rout[7], main, 1
instance = comp, \displayReg|y[7]~3 , displayReg|y[7]~3, main, 1
instance = comp, \D|Equal0~0 , D|Equal0~0, main, 1
instance = comp, \D|Equal1~1 , D|Equal1~1, main, 1
instance = comp, \displayReg|y[4]~0 , displayReg|y[4]~0, main, 1
instance = comp, \displayReg|y[5]~1 , displayReg|y[5]~1, main, 1
instance = comp, \displayReg|y[6]~2 , displayReg|y[6]~2, main, 1
instance = comp, \displ|Mux6~0 , displ|Mux6~0, main, 1
instance = comp, \displ|Mux5~0 , displ|Mux5~0, main, 1
instance = comp, \displ|Mux4~0 , displ|Mux4~0, main, 1
instance = comp, \displ|Mux3~0 , displ|Mux3~0, main, 1
instance = comp, \displ|Mux2~0 , displ|Mux2~0, main, 1
instance = comp, \displ|Mux1~0 , displ|Mux1~0, main, 1
instance = comp, \displ|Mux0~0 , displ|Mux0~0, main, 1
instance = comp, \displayReg|y[3]~7 , displayReg|y[3]~7, main, 1
instance = comp, \displayReg|y[1]~5 , displayReg|y[1]~5, main, 1
instance = comp, \displayReg|y[0]~4 , displayReg|y[0]~4, main, 1
instance = comp, \displayReg|y[2]~6 , displayReg|y[2]~6, main, 1
instance = comp, \displ|Mux13~0 , displ|Mux13~0, main, 1
instance = comp, \displ|Mux12~0 , displ|Mux12~0, main, 1
instance = comp, \displ|Mux11~0 , displ|Mux11~0, main, 1
instance = comp, \displ|Mux10~0 , displ|Mux10~0, main, 1
instance = comp, \displ|Mux9~0 , displ|Mux9~0, main, 1
instance = comp, \displ|Mux8~0 , displ|Mux8~0, main, 1
instance = comp, \displ|Mux7~0 , displ|Mux7~0, main, 1
